apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arc.fullname" . }}
  labels:
    {{- include "arc.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "arc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "arc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ARC_RUNTIME_TYPE
              value: {{ .Values.config.runtime.type }}
            - name: ARC_RUNTIME_NAMESPACE
              value: {{ .Values.config.runtime.namespace | default .Release.Namespace }}
            - name: ARC_STATE_TYPE
              value: {{ .Values.config.state.type }}
            {{- if eq .Values.config.state.type "postgres" }}
            - name: ARC_STATE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "arc.fullname" . }}-postgres
                  key: url
            {{- end }}
            {{- if .Values.amq.enabled }}
            - name: ARC_AMQ_ENDPOINT
              value: "amq-{{ .Release.Name }}:9090"
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/arc
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /data
            {{- end }}
          command:
            - /usr/local/bin/arc
          args:
            - server
            - --config=/etc/arc/config.yaml
      volumes:
        - name: config
          configMap:
            name: {{ include "arc.fullname" . }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "arc.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}